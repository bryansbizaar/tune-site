# name: CI/CD

# on:
#   push:
#     branches: [main, add-backend] # Include your current branch
#   pull_request:
#     branches: [main]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - name: Use Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: "18.x"

#       - name: Install dependencies
#         run: |
#           npm install
#           cd client && npm install
#           cd ../server && npm install

#       - name: Run client tests
#         run: |
#           cd client
#           npm test

#       - name: Run server tests
#         env:
#           JWT_SECRET: test-jwt-secret-key
#           MONGODB_URI: mongodb://localhost:27017/
#           NODE_ENV: test
#           FRONTEND_URL: http://localhost:5173
#           EMAIL_HOST: smtp.example.com
#           EMAIL_PORT: 587
#           EMAIL_USER: test@example.com
#           EMAIL_PASS: test-password
#         run: |
#           cd server
#           npm test

name: CI/CD

on:
  push:
    branches: [main, add-backend]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      JWT_SECRET: test-jwt-secret
      FRONTEND_URL: http://localhost:5173
      SENDGRID_API_KEY: test-sendgrid-key
      FROM_EMAIL: test@example.com
      MONGODB_URI: mongodb://localhost:27017/

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: |
          npm install
          cd client && npm install
          cd ../server && npm install

      - name: Run client tests
        run: |
          cd client
          npm test

      - name: Run server tests
        run: |
          cd server
          npm test

  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' # Only deploy from main branch
  #   steps:
  #     - name: Deploy to Render
  #       env:
  #         RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
  #       run: |
  #         echo "Deploy step will be configured after Render setup"
